{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","setKey","event","setState","key","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,IAFhB,EAaEC,OAAS,SAACC,GACR,EAAKC,SAAuB,MAAdD,EAAME,IAChB,CAAEJ,WAAY,SACd,CAAEA,WAAYE,EAAME,OAhB5B,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,UAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,UAV/C,oBAmBE,WACE,OACE,qBAAKQ,UAAU,MAAf,SACE,4BACGF,KAAKR,MAAMC,WAAX,mCAC+BO,KAAKR,MAAMC,WAD1C,KAEG,kCAzBd,GAAyBU,IAAMC,W,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.5818c1b9.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  pressedKey: string,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    pressedKey: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.setKey);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.setKey);\n  }\n\n  setKey = (event: KeyboardEvent) => {\n    this.setState(event.key === ' '\n      ? { pressedKey: 'Space' }\n      : { pressedKey: event.key });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <p>\n          {this.state.pressedKey\n            ? `The last pressed key is [${this.state.pressedKey}]`\n            : 'Nothing was pressed yet'}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}